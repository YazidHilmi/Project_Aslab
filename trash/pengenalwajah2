import cv2, os, numpy as np

face_ref = cv2.CascadeClassifier("face_ref.xml")
faceRecognizer = cv2.face.LBPHFaceRecognizer_create()
camera = cv2.VideoCapture(0)
camera.set(3, 640)
camera.set(4, 480)

faceDir = 'datawajah'
latihDir = 'LatihWajah' 

faceRecognizer.read(latihDir + '/training.xml')
font = cv2.FONT_HERSHEY_SCRIPT_SIMPLEX

id = 0
names = ['Tidak diketahui', 'Yazid Hilmi', 'Nama Lain']

minWidth = 0.1 * camera.get(3)
minHeight = 0.1 * camera.get(4)

def main() :
    while True:
        _,frame = camera.read()
        kotak_scan(frame)
        cv2.imshow('Deteksi Wajah', frame)
        if cv2.waitKey(1) & 0xFF == ord ('q'):
            keluar()
            break

def ubah_gray(frame):
    optimized_face = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    face = face_ref.detectMultiScale(optimized_face, scaleFactor = 1.5, minNeighbors = 2, minSize = (round(minWidth), round(minHeight)))
    return face

def kotak_scan(frame):
    
    for x,y,w,h in ubah_gray(frame):
        cv2.rectangle(frame, (x,y), (x+w, y+h), (255, 0, 0), 4)
        id, confident = faceRecognizer.predict(frame[y:y+h, x:x+w]) #Confident 0 = sempurna
        if confident < 50 :
            nameID = names[id]
            confidenceTxt = "{0}%".format(round(100-confident))
        else:
            nameID = names [id]
            confidenceTxt = "{0}%".format(round(100-confident))
        cv2.putText(frame, str(nameID),(x+5, y-5), font, 1, (255,255,255), 2)
        cv2.putText(frame, str(confidenceTxt),(x+5, y+h-5), font, 1, (255,255,0), 2)

def keluar():
    camera.release()
    cv2.destroyAllWindows()
    exit()